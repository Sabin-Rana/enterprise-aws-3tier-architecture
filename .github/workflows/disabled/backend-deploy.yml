---
# ==============================================================================
# BACKEND DEPLOYMENT WORKFLOW - ENTERPRISE AWS 3-TIER ARCHITECTURE
# ==============================================================================
# ZERO-COST PORTFOLIO MODE: All AWS resource creation commented out
# Original deployment code preserved for future reference
# ==============================================================================

name: Backend Deployment

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-deploy.yml'
    branches: [main]
  pull_request:
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  build-backend:
    name: Build Backend API
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: true
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run tests
        run: |
          cd backend
          npm test

      - name: Build Docker image
        run: |
          cd backend
          docker build -t backend-api:${{ github.sha }} .
          echo "Docker image built successfully"

      - name: Save Docker image
        uses: actions/upload-artifact@v4
        with:
          name: backend-docker-image
          path: backend/
          retention-days: 1

  security-scan:
    name: Security & Code Quality
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Security audit
        run: |
          cd backend
          npm audit --audit-level high
          echo "Security audit completed"

      - name: Code linting
        run: |
          cd backend
          npx eslint src/ --max-warnings=0
