# ==============================================================================
# FRONTEND DEPLOYMENT WORKFLOW - ENTERPRISE AWS 3-TIER ARCHITECTURE
# ==============================================================================
# This workflow builds and deploys the React frontend to AWS S3 and CloudFront
# Includes testing, security scanning, and automated deployment procedures
# ==============================================================================

name: Frontend Deployment

on:
  push:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
    branches: [ main ]
  pull_request:
    paths:
      - 'frontend/**'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_REGION: 'us-east-1'

jobs:
  # Frontend application build and testing
  build-frontend:
    name: Build React Frontend
    runs-on: ubuntu-latest
    
    steps:
    # Checkout repository code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Setup Node.js environment with caching
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    # Install frontend dependencies
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
      
    # Execute frontend test suite
    - name: Run tests
      run: |
        cd frontend
        npm test -- --watchAll=false
        
    # Build production bundle
    - name: Build production bundle
      run: |
        cd frontend
        npm run build
        echo "Frontend build completed"
        
    # Upload build artifacts for deployment
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 1

  # Frontend deployment to AWS S3 and CloudFront
  deploy-to-s3:
    name: Deploy to S3
    runs-on: ubuntu-latest
    needs: build-frontend
    environment: production
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
    # Download built frontend artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend-build
        
    # Configure AWS credentials for deployment
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    # Deploy to S3 bucket with caching headers
    - name: Deploy to S3
      run: |
        aws s3 sync frontend-build/ s3://enterprise-aws-3tier-frontend-${{ github.sha }} \
          --delete \
          --acl public-read \
          --cache-control "max-age=31536000"
        echo "Frontend deployed to S3"
        
    # Invalidate CloudFront cache for immediate updates
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"

  # Frontend security scanning and dependency audit
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    # Checkout repository code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Setup Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    # Install frontend dependencies
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    # Security audit for dependency vulnerabilities
    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level high